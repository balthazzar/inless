"use strict";

var React = require('react');
var Router = require('react-router');

var History = Router.History;

var Logger = require('logger');
var logger = Logger.getLogger('reactRoute.mixins');

var configs = require('configs');
var appConfig = configs('app');

var oldLocation = null;

var client = function() {
	var load = function () {
		var $ = this;
		// console.log('>>>>>update');
		if(!window.topopen || window.location.href == oldLocation ) {
			return;
		}
		oldLocation = window.location.href;
		var form = new FormData();
		console.log('||>>url', window.location.pathname+window.location.search);
		form.append('url', window.location.pathname+window.location.search);
		form.append('body', JSON.stringify({}));
		fetch(appConfig.react.preDataPath||'/preData', {
			credentials: 'include',
			method: 'post',
			body: form
		}).then(function(response) {
			return response.json().then(function(data) {
				// window.__isLoaded = true;
				document.title = data.title;
				$.setState(data.preData);
			});
		}).catch(function(error) {
			console.error(error);
		});
	}
	return {
		getLink() {
			return Router.Link;
		},
		redirect(url, query) {
			url = url || '/';
			query = query || {};
			this.history.pushState(null, url, query);
		},
		getInitialState: function() {
			// console.log('getInitialState');
			var $ = this;
			var form = new FormData();
			if(!window.topopen) {
				window.topopen = true;
				return window.___preData;
			}
			if(!this.isLayout) {
				load.bind(this)();
			}
			return {};
		},
		componentWillUpdate() {
			if(!this.isLayout) {
				load.bind(this)();
			}
		},
		componentWillMount() {
			if(typeof this.client == 'function') {
				this.client(this.state);
			}
		}
	};
}

var server = function() {
	var preData = require('preData'+'/get.js');
	return {
		getLink() {
			return Router.Link;
		},
		getInitialState: function() {
			var did = this.props.location.hash.substr(1);
			var data = preData(did);
			if(typeof this.server == 'function') {
				this.server(data);
			}
			return data;
		}
	};
}

var dataMixin = typeof window == 'undefined' ? server() : client();





module.exports = [dataMixin, History];



