'use strict';

Object.defineProperty(exports, '__esModule', {
	value: true
});

var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

var Session = (function () {
	function Session(tmp) {
		_classCallCheck(this, Session);

		this.__isSession = true;
		var status = 8;
		var id = null;
		var data = {};
		var storage = {};
		var dataSign = null;
		var accSign = null;
		if (typeof tmp == 'object') {
			if (typeof tmp.account == 'object') {
				status = tmp.account.status || status;
				id = tmp.account.id || id;
			}
			if (typeof tmp.data == 'object') {
				data = tmp.data || data;
			}
			if (typeof tmp.storage == 'object') {
				storage = tmp.storage || storage;
			}
			if (typeof tmp.dataSign == 'string') {
				dataSign = tmp.dataSign || dataSign;
			}
			if (typeof tmp.accSign == 'string') {
				accSign = tmp.accSign || accSign;
			}
		}
		this.__data = {
			account: {
				status: status,
				id: id
			},
			dataSign: dataSign,
			accSign: accSign
		};
		this.storage = storage || storage;
		this.data = data || data;
	}

	_createClass(Session, [{
		key: 'sign',
		value: function sign(data) {
			return signature.sign(data);
		}
	}, {
		key: 'export',
		value: function _export() {
			var ret = {};
			var storage = {};
			var data = {};
			if (typeof this.data == 'object') {
				data = this.data || data;
			};
			if (typeof this.storage == 'object') {
				storage = this.storage || storage;
			};
			ret['account'] = this.__data.account;
			ret['storage'] = storage;
			ret['data'] = data;
			return ret;
		}
	}, {
		key: 'exportPacked',
		value: function exportPacked() {
			var encode = function encode(data) {
				return new Buffer(data).toString('base64');
			};
			var decode = function decode(data) {
				return new Buffer(data, 'base64').toString('ascii');
			};
			var ret = this['export']();
			ret['account'] = encode(JSON.stringify(this.__data.account));
			ret['storage'] = encode(JSON.stringify(storage));
			ret['data'] = JSON.stringify(data);
			return ret;
		}
	}, {
		key: 'exportSigned',
		value: function exportSigned() {
			var ret = this.exportPacked();
			ret['dataSign'] = this.sign(ret['data']);
			ret['accSign'] = this.sign(ret['account']);
			return ret;
		}
	}, {
		key: 'id',
		set: function (data) {
			this.__data.account.id = data;
		},
		get: function () {
			return this.__data.account.id;
		}
	}, {
		key: 'status',
		set: function (data) {
			this.__data.account.status = data;
		},
		get: function () {
			return this.__data.account.status;
		}
	}]);

	return Session;
})();

exports['default'] = Session;
module.exports = exports['default'];