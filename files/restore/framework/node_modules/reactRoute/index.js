'use strict';

var React = require('react');
var Router = require('react-router');

var History = require('history');

var Logger = require('logger');
var logger = Logger.getLogger('reactRoute');

var configs = require('configs');
var appConfig = configs('app');



var client = function() {
	return {
		getLink() {
			return Router.Link;
		},
		getInitialState: function() {
			var $ = this;
			var form = new FormData();
			if(!window.topopen) {
				window.topopen = true;
				return window.___preData;
			}
			console.log('>>url', window.location.pathname+window.location.search);
			form.append('url', window.location.pathname+window.location.search);
			form.append('body', JSON.stringify({}));
			fetch(appConfig.react.preDataPath||'/preData', {
				credentials: 'include',
				method: 'post',
				body: form
			}).then(function(response) {
				return response.json().then(function(data) {
					$.setState(data.preData);
				});
			}).catch(function(error) {
				console.error(error);
			});
			return {};
		},
		componentWillMount() {
			if(typeof this.client == 'function') {
				this.client(this.state);
			}
		}
	};
}

var server = function() {
	var preData = require('preData'+'/get.js');
	return {
		getLink() {
			return Router.Link;
		},
		getInitialState: function() {
			var did = this.props.location.hash.substr(1);
			var data = preData(did);
			// console.log('~~~~~~~~~~~~~~~~~~');
			// console.log(data);
			// console.log('~~~~~~~~~~~~~~~~~~');
			var onAir = this.onAir||function(){};
			//onAir();
			if(typeof this.server == 'function') {
				this.server(data);
			}
			return data;
		}
	};
}

var dataMixin = typeof window == 'undefined' ? server() : client();

module.exports = function(obj) {
	obj['mixins'] = [dataMixin, History];
	return React.createClass(obj);
};
