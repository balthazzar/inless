'use strict';

var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

var _logger = require('logger');

var _logger2 = _interopRequireDefault(_logger);

var _preData = require('preData');

var _preData2 = _interopRequireDefault(_preData);

var express = typeof window == 'undefined' ? require('ex' + 'press') : null;

var React = require('react/addons');
var rRouter = require('react-router');
var Route = rRouter.Route;
var NotFoundRoute = rRouter.NotFoundRoute;

var logger = _logger2['default'].getLogger('router');

var render = function render(layout, params) {
	var escapeHtml = function escapeHtml(text) {
		var map = {
			'&': '&amp;',
			'<': '&lt;',
			'>': '&gt;',
			'"': '&quot;',
			"'": '&#039;'
		};
		return text.replace(/[&<>"']/g, function (m) {
			return map[m];
		});
	};
	for (var _i in params) {
		var i = params[_i];
		layout = layout.split("%" + _i + "%").join(i);
		layout = layout.split("#" + _i + "#").join(escapeHtml(i));
	}
	return layout.replace(/(\n\s+)/gi, "").replace(/(\n)/gi, "");
};

var Router = (function () {
	function Router() {
		_classCallCheck(this, Router);

		this.routes = [];
	}

	_createClass(Router, [{
		key: 'add',
		value: function add(path, handler, status, title, express) {
			this.routes.push({
				path: path || '/',
				handler: handler || null,
				status: status || null,
				title: title || ':)',
				express: express || function (ret) {
					ret.end();
				}
			});
		}
	}, {
		key: 'rxReact',
		value: function rxReact(layout) {
			layout['mixins'] = [{
				getYield: function getYield() {
					return rRouter.RouteHandler;
				}
			}];
			var Layout = React.createClass(layout);
			var reactElements = [Route, { handler: Layout, location: "history" }];
			this.routes.forEach(function (e) {
				reactElements.push(React.createElement(Route, { path: e.path, handler: e.handler }));
			});
			var routes = React.createElement.apply(React, reactElements);
			return routes;
		}
	}, {
		key: 'exec',
		value: function exec(template, Layout, config) {
			var router = express.Router();
			var mode = require('start' + 'mode');
			var browserify = require('browserify' + '-middleware');
			var appConfig = require('con' + 'figs')('application');
			router.use('/api/session', function (request, response, next) {
				response.json(request.session);
			});
			router.use(config.browser.bundle || '/bundle.js', browserify('./framework/browser.js', {
				transform: ["babelify", "require-globify"],
				stage: 0,
				minify: mode == 'production',
				cache: mode == 'production'
			}));
			var routes = this.rxReact(Layout);
			var preData = new _preData2['default'](this.routes);
			router.use(preData.router);
			router.use(function (request, response, next) {
				if (!request.__ret) {
					logger.warn(request.path);
					response.status(404);
					response.end('Not found 404');
					return;
				}

				var _ref = request.__ret || {};

				var req = _ref.req;
				var res = _ref.res;
				var status = _ref.status;

				var relStatus = request.session.account.status;
				if (status < relStatus) {
					logger.warn(request.path);
					response.status(403);
					response.end('Error 403');
					return;
				}
				// logger.trace('==============');
				// logger.trace(request.path);
				// logger.trace(res.data);
				// logger.trace('==============');
				var dataId = preData.create(res.data);
				var url = request.path + '?dataId=' + dataId;
				rRouter.run(routes, url, function (Root) {
					var content = React.renderToString(React.createElement(Root, null));
					var xScript = (function () {
						var ret = '<script>var ___preData = ' + (!request.query.script ? JSON.stringify(preData.remove(dataId)) : '{}') + ';\n\t\t\t\t\tvar ___session = ' + (!request.session ? '{}' : JSON.stringify(request.session)) + ';</script>\n\t\t\t\t\t<script type="text/javascript" charset="utf-8" src="' + (config.browser.bundle || '/bundle.js') + '"></script>';
						return ret;
					})();
					var xStyle = (function () {
						var ret = '\n\t\t\t\t\t<link rel="stylesheet" type="text/css" href="' + (appConfig.style.bundleUrl || '/bundle.css') + '"></link>\n\t\t\t\t\t';
						return ret;
					})();
					response.end(render(template, {
						title: res.title || '',
						rootSelector: appConfig.style.rootSelector ? appConfig.style.rootSelector.replace(/\.|\#/ig, '') : 'application',
						script: xScript,
						style: xStyle,
						'yield': content || ''
					}));
				});
			});
			return router;
		}
	}]);

	return Router;
})();

module.exports = Router;
